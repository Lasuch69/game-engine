#version 450

#include "include/cubemap_incl.glsl"

layout(binding = 0, rgba32f) uniform readonly image2D image;
layout(binding = 1, rgba32f) uniform writeonly imageCube cube;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main() {
	vec2 cubeSize = imageSize(cube);

	if (gl_GlobalInvocationID.x > cubeSize.x) {
		return;
	}

	vec2 coords = gl_GlobalInvocationID.xy / cubeSize * 2.0 - 1.0;
	vec3 spherical = mapToCube(coords, gl_GlobalInvocationID.z, false);

	vec2 invAtan = vec2(0.1591, 0.3183);
	vec2 eqUV = vec2(atan(spherical.z, spherical.x), asin(spherical.y)) * invAtan + 0.5;
	ivec2 eqPixel = ivec2(eqUV * imageSize(image));

	vec4 color = imageLoad(image, eqPixel);
	imageStore(cube, ivec3(gl_GlobalInvocationID), color);
}
